{"version":3,"file":"static/js/26.84bb9bff.chunk.js","mappings":"6PACA,EAAkC,sC,UCuGlC,EAhGqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MACjBC,GAA0CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,GAAwBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA0BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,GAE1BC,EAAe,SAAHC,GAAqC,IAADC,EAAAD,EAA9BE,OAAUhB,EAAIe,EAAJf,KAAMiB,EAAKF,EAALE,MACtC,OAAQjB,GACN,IAAK,OACHC,EAAQgB,GACR,MACF,IAAK,QACHZ,EAASY,GACT,MACF,IAAK,WACHR,EAAYQ,GAKlB,EAmBA,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAuBF,SAAA,EACrCG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,cACJF,EAAAA,EAAAA,MAAA,QAAMM,SArBS,SAAAC,GACnBA,EAAEC,kBAEGC,EAAAA,EAAAA,GAAkBnB,IAIrBX,GAAiB,GAEjBP,GAASsC,EAAAA,EAAAA,IAAS,CAAE5B,KAAAA,EAAMI,MAAAA,EAAOI,SAAAA,KAEjCP,EAAQ,IACRI,EAAS,IACTI,EAAY,KATZZ,GAAiB,EAWrB,EAMmCuB,SAAA,EAC3BG,EAAAA,EAAAA,KAAA,SACEM,MAAM,OACNC,QAAQ,WACR9B,KAAK,OACL+B,KAAK,OACLd,MAAOjB,EACPgC,SAAUnB,EACVoB,QAAQ,8DACRC,MAAM,yIACNC,UAAQ,EACRC,GAAI,CAAEC,GAAI,MAEZd,EAAAA,EAAAA,KAAA,SACEM,MAAM,SACNC,QAAQ,WACR9B,KAAK,QACL+B,KAAK,QACLd,MAAOb,EACP4B,SAAUnB,EACVoB,QAAQ,wCACRC,MAAM,+DACNC,UAAQ,EACRC,GAAI,CAAEC,GAAI,MAEZd,EAAAA,EAAAA,KAAA,SACE,eAAc3B,EAAgB,OAAS,QACvC,mBAAkBA,EAAgB,iBAAmB,KACrDkC,QAAQ,WACR9B,KAAK,WACL+B,KAAK,WACLd,MAAOT,EACPwB,SAAUnB,EACVoB,QAAQ,uDACRC,MAAM,6GACNE,GAAI,CAAEC,GAAI,MAGZd,EAAAA,EAAAA,KAAA,QAAMe,GAAG,iBAAgBlB,SACtBxB,EAAgB,sHAAwH,SAG7I2B,EAAAA,EAAAA,KAAA,UAAQO,QAAQ,YAAYC,KAAK,SAAQX,SAAC,eAI3CV,IAAea,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,MAG7B,EC3FA,EARiB,WACf,OACEhB,EAAAA,EAAAA,KAAA,OAAKiB,MAAO,CAAEC,SAAU,QAASC,OAAQ,SAAUC,QAAS,QAASvB,UACnEG,EAAAA,EAAAA,KAACqB,EAAY,KAGnB,C,uDCTO,IAAMjB,EAAoB,SAAAnB,GAC/B,QAAKA,GAIE,sDAAsDqC,KAAKrC,EACpE,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","utils/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registerWrapper\":\"RegisterForm_registerWrapper__q+rST\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { passwordValidator } from 'utils/validators';\nimport { register } from 'redux/auth/authOperations';\nimport { selectIsRefreshed } from 'redux/auth/authSelectors';\nimport Loader from '../Loader/Loader';\nimport styles from './RegisterForm.module.css'; \n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [passwordError, setPasswordError] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const isRefreshed = useSelector(selectIsRefreshed);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!passwordValidator(password)) {\n      setPasswordError(true);\n      return;\n    } else {\n      setPasswordError(false);\n\n      dispatch(register({ name, email, password }));\n\n      setName('');\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  return (\n    <>\n      <div className={styles.registerWrapper}>\n        <h2>Register</h2>\n        <form onSubmit={handleSubmit}>\n          <input\n            label=\"Name\"\n            variant=\"outlined\"\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^([A-Za-z-']{1,50})|([А-Яа-я-']{1,50})$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            sx={{ mb: 2 }}\n          />\n          <input\n            label=\"E-mail\"\n            variant=\"outlined\"\n            name=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={handleChange}\n            pattern=\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\"\n            title=\"Email may contain only letters, apostrophe, dash and spaces.\"\n            required\n            sx={{ mb: 2 }}\n          />\n          <input\n            aria-invalid={passwordError ? 'true' : 'false'} \n            aria-describedby={passwordError ? 'password-error' : null} \n            variant=\"outlined\"\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={handleChange}\n            pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$\"\n            title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\n            sx={{ mb: 2 }}\n          />\n          \n          <span id=\"password-error\">\n            {passwordError ? 'Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters' : ''}\n          </span>\n        </form>\n        <button variant=\"contained\" type=\"submit\">\n          Sign up\n        </button>\n      </div>\n      {isRefreshed && <Loader />}\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport RegisterForm from '../components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div style={{ maxWidth: '600px', margin: '0 auto', padding: '20px' }}>      \n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n\n","export const passwordValidator = password => {\n  if (!password) {\n    return false;\n  }\n\n  return /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/.test(password);\n};\n\n//^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\nexport const emailValidate = email => {\n  return /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email);\n};\n"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","passwordError","setPasswordError","_useState3","_useState4","name","setName","_useState5","_useState6","email","setEmail","_useState7","_useState8","password","setPassword","isRefreshed","useSelector","selectIsRefreshed","handleChange","_ref","_ref$target","target","value","_jsxs","_Fragment","children","className","styles","_jsx","onSubmit","e","preventDefault","passwordValidator","register","label","variant","type","onChange","pattern","title","required","sx","mb","id","Loader","style","maxWidth","margin","padding","RegisterForm","test"],"sourceRoot":""}