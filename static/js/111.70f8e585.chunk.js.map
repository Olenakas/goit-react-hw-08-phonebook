{"version":3,"file":"static/js/111.70f8e585.chunk.js","mappings":"kRA4FA,EAhFkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACjBC,GAA0CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,GAE1BC,EAAe,SAAHC,GAAqC,IAADC,EAAAD,EAA9BE,OAAUC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACtC,OAAQD,GACN,IAAK,QACHZ,EAASa,GACT,MACF,IAAK,WACHT,EAAYS,GAKlB,EAkBA,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJF,EAAAA,EAAAA,MAAA,QAAMI,SApBS,SAAAC,GACnBA,EAAEC,kBAEGC,EAAAA,EAAAA,GAAkBlB,IAIrBP,GAAiB,GAEjBP,GAASiC,EAAAA,EAAAA,IAAM,CAAEvB,MAAAA,EAAOI,SAAAA,KAExBH,EAAS,IACTI,EAAY,KARZR,GAAiB,EAUrB,EAMmCoB,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEM,MAAM,SACNX,KAAK,QACLY,QAAQ,WACRC,KAAK,QACLZ,MAAOd,EACP2B,SAAUlB,EACVmB,QAAQ,wCACRC,MAAM,+DACNC,UAAQ,EACRC,GAAI,CAAEC,GAAI,MAEZd,EAAAA,EAAAA,KAAA,SACEe,MAAOrC,EACP4B,MAAM,aACNX,KAAK,WACLY,QAAQ,WACRC,KAAK,WACLZ,MAAOV,EACPuB,SAAUlB,EACVmB,QAAQ,uDACRC,MAAM,6GACNK,WACEtC,EACI,sHACA,GAENmC,GAAI,CAAEC,GAAI,MAEZd,EAAAA,EAAAA,KAAA,UAAQO,QAAQ,YAAYC,KAAK,SAAQT,SAAC,kBAK7CX,IAAeY,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,MAG7B,EC9EA,EARc,WACZ,OACEjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,CAACC,SAAS,KAAKN,GAAI,CAAEO,GAAI,EAAGC,GAAI,GAAItB,UAC5CC,EAAAA,EAAAA,KAACsB,EAAS,KAGhB,C,uDCVO,IAAMlB,EAAoB,SAAAlB,GAC/B,QAAKA,GAIE,sDAAsDqC,KAAKrC,EACpE,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx","utils/validators.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport { passwordValidator } from 'utils/validators';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from 'redux/auth/authOperations';\nimport { selectIsRefreshed } from 'redux/auth/authSelectors';\n\n\nimport Loader from '../Loader/Loader';\n\n\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [passwordError, setPasswordError] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const isRefreshed = useSelector(selectIsRefreshed);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!passwordValidator(password)) {\n      setPasswordError(true);\n      return;\n    } else {\n      setPasswordError(false);\n\n      dispatch(login({ email, password }));\n\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <h2>Login</h2>\n        <form onSubmit={handleSubmit}>\n          <input\n            label=\"E-mail\"\n            name=\"email\"\n            variant=\"outlined\"\n            type=\"email\"\n            value={email}\n            onChange={handleChange}\n            pattern=\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\"\n            title=\"Email may contain only letters, apostrophe, dash and spaces.\"\n            required\n            sx={{ mb: 2 }}\n          />\n          <input\n            error={passwordError}\n            label=\"Password *\"\n            name=\"password\"\n            variant=\"outlined\"\n            type=\"password\"\n            value={password}\n            onChange={handleChange}\n            pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$\"\n            title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\n            helperText={\n              passwordError\n                ? 'Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters'\n                : ''\n            }\n            sx={{ mb: 2 }}\n          />\n          <button variant=\"contained\" type=\"submit\">\n            Sign in\n          </button>\n        </form>\n      </div>\n      {isRefreshed && <Loader />}\n    </>\n  );\n};\n\nexport default LoginForm;","import React from 'react';\nimport { Container } from '@mui/material';\nimport LoginForm from '../components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <Container maxWidth=\"sm\" sx={{ pt: 2, pb: 2 }}>\n      <LoginForm />\n    </Container>\n  );\n};\n\nexport default Login;\n\n\n","export const passwordValidator = password => {\n  if (!password) {\n    return false;\n  }\n\n  return /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/.test(password);\n};\n\n//^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\nexport const emailValidate = email => {\n  return /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email);\n};\n"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","passwordError","setPasswordError","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","isRefreshed","useSelector","selectIsRefreshed","handleChange","_ref","_ref$target","target","name","value","_jsxs","_Fragment","children","_jsx","onSubmit","e","preventDefault","passwordValidator","login","label","variant","type","onChange","pattern","title","required","sx","mb","error","helperText","Loader","Container","maxWidth","pt","pb","LoginForm","test"],"sourceRoot":""}